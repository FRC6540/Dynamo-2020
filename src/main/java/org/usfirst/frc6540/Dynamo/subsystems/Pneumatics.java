// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc6540.Dynamo.subsystems;

import org.usfirst.frc6540.Dynamo.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class Pneumatics extends Subsystem {

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	private Compressor compressor;
	private DoubleSolenoid horizontalPiston;
	private DoubleSolenoid verticalPiston;

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	public Pneumatics() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		compressor = new Compressor(0);
		addChild("Compressor", compressor);

		horizontalPiston = new DoubleSolenoid(0, 1);
		addChild("Horizontal Piston", horizontalPiston);

		verticalPiston = new DoubleSolenoid(4, 5);
		addChild("Vertical Piston", verticalPiston);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	}

	@Override
	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		// setDefaultCommand(new MySpecialCommand());
	}

	public void extend_HPiston() {
		horizontalPiston.set(DoubleSolenoid.Value.kForward);
		// verticalPiston.set(DoubleSolenoid.Value.kReverse);
	}

	public void retract_HPiston() {
		// verticalPiston.set(DoubleSolenoid.Value.kForward);
		verticalPiston.set(DoubleSolenoid.Value.kReverse);
	}

	public void extend_VPiston() {
		verticalPiston.set(DoubleSolenoid.Value.kForward);
		// verticalPiston.set(DoubleSolenoid.Value.kReverse);
	}

	public void retract_VPiston() {
		// verticalPiston.set(DoubleSolenoid.Value.kForward);
		verticalPiston.set(DoubleSolenoid.Value.kReverse);
	}

	public void reset() {
		retract_HPiston();
		retract_VPiston();
	}

	@Override
	public void periodic() {
		// Put code here to be run every loop

	}

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

}
